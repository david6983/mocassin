id;english;chinese
struct;struct;
tcf_simple;simple;
usw_ew_step1_title;Enum name;
mb_help;Help;
ld_generated_struct;Generated structures;
mb_dlist;DList (Double-chained Linked List);
type;Type;
btb_test;Test;
usw_sw_step2_title;Struct attributes;
mb_generate;Generate;
v_reserved_error;The name is reserved for the C language;
is_comparable;is comparable;
mb_doc;Documentation;
untitled;untitled;
pointer;Pointer;
change_language;Change language;
cnm_info_header;Project name has been updated;
cnm_fieldset;Enter a new name;
v_exist_in_enum_error;The name already exist in this enum;
ld_user_structures;User structures;
enum;enum;
tcf_type;Type;
cnm_info_content_1;Project name;
cnm_info_content_2;has been updated successfully;
mb_pref;Preferences;
btb_save;Save;
quit_header;Quit without saving;
mb_package_name;Change package name;
add_fields_inside;Add fields inside;
add_button;Add;
ld_enum;Enumerations [enum];
tcf_from_project;from project;
mb_file;File;
cnm_update_button;update;
undefined;undefined;
mb_test;Test;
mb_hashtable;Hash table;
npm_fieldset;Enter a name;
gsw_slw_step2_title;Slist simple attributes;
choose_new_type;Choose a new type;
v_exist_in_union_error;The name already exist in this union;
mb_new_project;New project;
mb_new;New;
gsw_slw_title;Create a single linked list;
ld_struct;Structures [struct];
union;union;
mb_btree;BTree (Binary Tree);
mb_quadtree;QuadTree;
choose_from_list;Choose from the list;
usw_ew_title;Create an enum;
usw_uw_title;Create an union;
v_exist_in_struct_error;The name already exist in this structure;
language_change_header;Changed default language to;
v_not_alphanumeric_error;The name is not alphanumeric (Should contains only letters (any case), numbers and underscores);
usw_uw_step1_title;Union name;
mb_rtree;R-Tree;
comparable;Comparable;
usw_sw_step1_title;Struct basic information;
v_already_exist_error;The name already exist in another structure in the project;
btb_generate;Generate;
gsw_slw_step1_t1;This data structure represents a simple linked list in C:;
gsw_slw_step1_t2;The types included are based on the model you created.;
gsw_slw_step1_t3;You can add simple types in the next section.;
empty;empty;
ld_slist;Single Linked List [Slist];
usw_uw_step2_title;Union attributes;
mb_save_project;Save project locally;
usw_ew_step2_title;Enumeration values;
mb_save_web;Save to web application;
comparison;Comparison;
is_pointer;is a pointer;
usw_sw_step1_display_function;Display function;
gsw_slw_step1_title;Information about this structure;
npm_title;Create a new project;
no_variables;no simple variables added;
created_by;Created by;
choose_type;Choose a type;
npm_create_btn;create;
tcf_choose_from_list;Choose from the list;
usw_ew_heading;Provide enumeration information;
name;Name;
clm_language;Language;
mb_tree;Tree (Multi-node Tree);
pointer_type;Pointer type;
npm_default_value;untitled;
mb_open_from;Open from computer;
mb_slist;SList (Single-chained Linked List);
mb_about;About;
usw_uw_heading;Provide union information;
title;Mocassin - generate data structures in C;
delete;Delete;
quit_content;Are you sure you want to quit without saving ?;
cnm_title;Change package name;
mb_bstree;BSTree (Binary Search Tree);
usw_sw_step1_is_generated;is generated;
mb_graph;Graph;
value;Value;
mb_generate_c;Generate;
usw_sw_heading;Provide structure information;
clm_select;Select;
v_blank_field_error;This field should not be blank;
ld_union;Unions [union];
gsw_slw_heading;Provide list information;
usw_sw_title;Create a struct;
confirm_cancel_Content;Do you really want to loose your progress?;
ld_files_view;Files view;
btb_open;Open;
clm_choose_language;Choose your language;
confirm_cancel_header;Confirm cancel;
language_change_content;restart the app to apply the new language;
tcf_validate_changes;Validate changes;
mb_import_web;Import from web application;