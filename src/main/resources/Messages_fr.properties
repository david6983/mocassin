# common
title = Mocassin - générateur de structures de données en C
title_1 = Mocassin
title_2 = générateur de structures de données en C
untitled = sans titre
undefined = indéfinis
empty = vide
no_variables = aucune variable simple ajoutée
quit_header = Quitter sans sauvegarder
quit_content = Êtes-vous sûr de vouloir quitter sans sauvegarder ?
confirm_cancel_header = Confirmation de l'annulation
confirm_cancel_content = Vous voulez vraiment perdre vos modifications ?
add_button = Ajouter
name = Nom
type = Type
pointer = Pointeur
comparable = Comparable
add_fields_inside = Ajouter des champs
value = Valeur
delete = Supprimer
choose_type = Choix du type
choose_new_type = Choix du nouveau type
choose_from_list = Choix parmis la liste
pointer_type = De type pointeur
is_pointer = est un pointeur
comparison = Comparaison
is_comparable = est comparable
language_change_header = La langue par defaut est maintenant
language_change_content = Redémarrer le logiciel pour appliquer les changements
change_language = Changer la langue
created_by = Créé par Haioum David
edit_selected_type = Éditer le type sélectionné

# menubar (mb)
mb_file = Fichier
mb_generate = Generer
mb_new = Nouveau
mb_pref = Préférences
mb_help = Aide

# File menuitem
mb_new_project = Nouveau projet
mb_open_from = Ouvrir depuis mon ordinateur
mb_save_project = Sauvegarder localement mon projet
mb_generate_c = Générer
mb_save_web = Sauvegarder vers l'application web
mb_import_web = Importer depuis l'application web
mb_test = Tester

# Generate menuitem
mb_slist = SList (liste chainée simple)
mb_dlist = DList (liste doublement chainée)
mb_btree = BTree (Arbre binaire)
mb_bstree = BSTree (Arbre binaire de recherche)
mb_tree = Tree (Arbre multi-noeuds)
mb_quadtree = QuadTree
mb_rtree = R-Tree
mb_graph = Graph
mb_hashtable = Hash table

# Preferences menuitem
mb_package_name = Changer le nom du projet

# Help menuitem
mb_doc = Documentation
mb_about = À propos

# left drawer (ld)
ld_generated_struct = Structures générées
ld_user_structures = Structures utilisateur
ld_files_view = Apperçus des fichiers
ld_slist = Liste simplement chainée [Slist]
ld_enum = Enumerations [enum]
ld_union = Unions [union]
ld_struct = Structures [struct]

# bottom tool bar (btb)
btb_generate = Generer
btb_test = Tester
btb_save = Sauvegarder
btb_open = Ouvrir

# new project modal (npm)
npm_title = Creer un nouveau projet
npm_fieldset = Entrer un nom
npm_create_btn = Creer

# Change name modal (cnm)
cnm_title = Changer le nom du projet
cnm_fieldset = Entrer un nouveau nom
cnm_update_button = actualiser
cnm_info_header = Le nom du projet a été actualisé
cnm_info_content_1 = Le nom du projet est maintenant

# Change language modal (clm)
clm_choose_language = Choisissez la nouvelle langue
clm_language = Langue
clm_select = Selectionner

# type cell fragments (tcf)
tcf_type = Type
tcf_simple = simple
tcf_from_project = depuis le projet
tcf_choose_from_list = Choisir parmis la liste
tcf_validate_changes = Valider les changements

## generated structures wizards (gsw)

# slist wizard (gsw_slw)

gsw_slw_title = Creation d'une liste chainée simple
gsw_slw_heading = remplir les informations

gsw_slw_step1_title = Informations à propos de la structure
gsw_slw_step1_t1 = Cette structure de données représente une liste chainée simple en C:
gsw_slw_step1_t2 = les champs sont basés sur le model utilisateur.
gsw_slw_step1_t3 = Vous pouvez ajouter des types simples comme nouveau champs.

gsw_slw_step2_title = attribus simple de la Slist

## user structures wizards (usw)

# enum wizard (usw_ew)

usw_ew_title = Creer une enum
usw_ew_heading = remplir les informations de l'énumeration
usw_ew_step1_title = Nom de l'Enum
usw_ew_step2_title = Champs de l'Enum

# struct wizard (usw_sw)

usw_sw_title = Creer une struct
usw_sw_heading = remplir les informations de la structure
usw_sw_step1_title = information de base
usw_sw_step1_display_function = fonction d'affichage au terminal
usw_sw_step1_is_generated = doit-être générée
usw_sw_step2_title = Champs de la structures

# union wizard (usw_uw)

usw_uw_title = Creer une union
usw_uw_heading = remplir les informations de l'union
usw_uw_step1_title = Nom de l'union
usw_uw_step2_title = Champs de l'union

# Validators (v)
v_not_alphanumeric_error = Le nom n'est pas alphanumérique (il ne doit contenir que des lettres, des chiffres ou/et des traits de soulignement)
v_blank_field_error = Ce champ ne doit pas être vide
v_already_exist_error = Le nom existe déjà dans une autre structure du projet
v_reserved_error = Le nom est réservé au langage C
v_exist_in_enum_error = Le nom existe déjà dans cette énumération
v_exist_in_struct_error = Le nom existe déjà dans cette structure
v_exist_in_union_error = Le nom existe déjà dans cette union

## cli


